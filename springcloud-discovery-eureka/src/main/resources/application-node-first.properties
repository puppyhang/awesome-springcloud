# eureka的第一个注册节点的相关配置
#server.port=7070
#eureka实例所在的服务器的主机名成
#eureka.instance.hostname=Ternence
#这个应用作为eureka服务器,他不需要将自己作为客户端注册到其他服务器中
#eureka.client.register-with-eureka=false
#由于注册中心的职责就是维护服务实例，它并不需要去检索服务，所以也设置为false
#eureka.client.fetch-registry=false
#配置eureka的默认分区
#eureka.client.serviceUrl.defaultZone=http://${eureka.instance.hostname}:${server.port}/eureka/
#
########################################以上是单机配置,以下是集群配置#######################################
#
# eureka的第一个注册节点的相关配置
server.port=7070
#eureka实例所在的服务器的主机名成
eureka.instance.hostname=ternence
#eureka节点的名称,如果不配置那么就是UNKNOWN
eureka.instance.appname=ternence-eureka
#使用IP地址注册
eureka.instance.prefer-ip-address=true
# 设为false，关闭自我保护
#eureka.server.enable-self-preservation=false
# 清理间隔（单位毫秒，默认是60*1000）
#eureka.server.eviction-interval-timer-in-ms=10000
#是否将自己的节点信息注册到eureka服务器当中,
#(eureka实现高可用的方法就是各个注册中心的节点之间相互注册)然后在节点之间相互同步数据,
#这样即使某个分片的节点挂掉了也不会导致服务的不可用,所以在集群环境这个配置应该是true
eureka.client.register-with-eureka=true
#检索已经储在的服务(这个节点也要是true,才能检索节点之间注册的服务)
eureka.client.fetch-registry=true
#默认情况下，每个Eureka服务器也是一个Eureka客户端，并且需要（至少一个）服务URL来定位对等体。
#您可以向系统添加多个对等体，只要它们至少一个边缘彼此连接，则它们将在它们之间同步注册。
#所以这个配置是用来定位对等实体/节点的
eureka.client.serviceUrl.defaultZone=http://charles:8080/eureka/